---
apiVersion: mcp.kagenti.com/v1alpha1
kind: MCPServer
metadata:
  name: test-server1
  namespace: mcp-test
  labels:
    "kagenti/mcp": "true"
spec:
  # Tool prefix applied to all servers in this MCPServer
  toolPrefix: test_
  targetRef:
    # Server 1 - Go SDK based (hi, time, slow, headers tools)
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: mcp-server1-route
---
apiVersion: mcp.kagenti.com/v1alpha1
kind: MCPServer
metadata:
  name: test-server2
  namespace: mcp-test
  labels:
    "kagenti/mcp": "true"
spec:
  toolPrefix: test2_
  targetRef:
    # Server 2 - Go SDK based (hello_world, time, headers, auth1234, slow tools)
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: mcp-server2-route
---
apiVersion: mcp.kagenti.com/v1alpha1
kind: MCPServer
metadata:
  name: test-server3
  namespace: mcp-test
  labels:
    "kagenti/mcp": "true"
spec:
  toolPrefix: test3_
  targetRef:
    # Server 3 - Python FastMCP based (time, add, dozen, pi, get_weather, slow)
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: mcp-server3-route
---
apiVersion: mcp.kagenti.com/v1alpha1
kind: MCPServer
metadata:
  name: test-server4
  namespace: mcp-test
  labels:
    "kagenti/mcp": "true"
spec:
  toolPrefix: test4_
  targetRef:
    # Server 4 - Go SDK based with authentication (same as server2 but requires auth)
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: mcp-server4-route
  credentialRef:
    name: server4-auth-credentials
    key: token
---
apiVersion: mcp.kagenti.com/v1alpha1
kind: MCPServer
metadata:
  name: test-broken-server
  namespace: mcp-test
  labels:
    "kagenti/mcp": "true"
spec:
  toolPrefix: broke_
  targetRef:
    group: gateway.networking.k8s.io
    kind: HTTPRoute
    name: mcp-broken-server-route
